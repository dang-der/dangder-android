plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id("com.apollographql.apollo3").version("3.7.0")
    id "de.mannodermaus.android-junit5" version "1.8.2.1"

}

android {
    namespace 'com.viewpoint.dangder'
    compileSdk 32

    defaultConfig {
        applicationId "com.viewpoint.dangder"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument("runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder")


    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    apollo {
        packageName.set("com.viewpoint")

    }

    packagingOptions {
        exclude "META-INF/LICENSE*"
    }

    buildFeatures {
        viewBinding = true
        dataBinding = true
    }

    junitPlatform {
        instrumentationTests {
            integrityCheckEnabled = false
        }
    }


}

kapt {
    correctErrorTypes true
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    // unit test

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.8.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.8.2")

    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4")
    testImplementation("com.google.truth:truth:1.0.1")
    testImplementation("org.mockito:mockito-inline:3.9.0")
    testImplementation("org.mockito.kotlin:mockito-kotlin:4.0.0")

//    testImplementation("junit:junit:4.13.2")
//    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.8.2")


    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation("androidx.test:runner:1.4.0")
    androidTestImplementation("org.junit.jupiter:junit-jupiter-api:5.8.2")
    androidTestImplementation("de.mannodermaus.junit5:android-test-core:1.2.2")
    androidTestRuntimeOnly("de.mannodermaus.junit5:android-test-runner:1.3.0")

    // graphql
    implementation("com.apollographql.apollo3:apollo-runtime:3.7.0")
    implementation("com.apollographql.apollo3:apollo-rx3-support:3.7.0")

    // hilt
    implementation("com.google.dagger:hilt-android:2.44")
    kapt("com.google.dagger:hilt-compiler:2.44")
    implementation("androidx.hilt:hilt-navigation-fragment:1.0.0")


    // navigation
    def nav_version = "2.5.3"
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")

    // socketio
    implementation('io.socket:socket.io-client:2.1.0') {
        exclude group: 'org.json', module: 'json'
    }

    // rx
    implementation('io.reactivex.rxjava3:rxandroid:3.0.2')
    implementation('io.reactivex.rxjava3:rxkotlin:3.0.1')
    implementation('io.reactivex.rxjava3:rxjava:3.1.5')

    // okhttp
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.10.0"))
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor:4.10.0")
    implementation("com.squareup.okhttp3:okhttp-urlconnection:4.9.1")


    // timber
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // datastore
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    // lottie
    implementation ("com.airbnb.android:lottie:5.2.0")



}